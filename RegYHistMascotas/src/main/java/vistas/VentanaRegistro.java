/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package vistas;
import dto.MascotaDTO;
import dto.PersonaDTO;
import controladores.MascotaControlador;
import controladores.PropietarioControlador;
import dao.*;
import dto.PropietarioDTO;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author BrayanOcampo
 */
public class VentanaRegistro extends javax.swing.JFrame {
    
    private MascotaDAO mascotaDAO;
    private PropietarioDAO propietarioDAO;
    // Controladores
    private PropietarioControlador propietarioControlador;
    private MascotaControlador mascotaControlador;

    /**
     * Creates new form VentanaRegistro
     */
    public VentanaRegistro() {

        initComponents();
        iniciarCarga();
        setTitle("Registro de Clientes");
        setLocationRelativeTo(this);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setVisible(true);
        mascotaDAO = new MascotaDAO();
        propietarioDAO = new PropietarioDAO();
        
        inicializarComboEspecie();
        
        // Columnas para la tabla de propietarios
        DefaultTableModel modeloPropietarios = new DefaultTableModel(
        new Object[]{"Nombre", "Documento", "Teléfono"},
        0 // No filas al inicio
);
        tablaProp.setModel(modeloPropietarios);
    
        // Columnas para la tabla de mascotas
        DefaultTableModel modeloMascotas = new DefaultTableModel(
        new Object[]{"ID", "Nombre", "Especie", "Edad", "Documento Propietario"},
        0 // No filas al inicio
);
        tablaMasc.setModel(modeloMascotas);
    }
    
    private void actualizarTablaMascotas() {
    String[] columnas = {"ID", "Nombre", "Especie", "Edad", "Documento Propietario"};
    DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
    ArrayList<MascotaDTO> lista = mascotaControlador.obtenerTodasMasc();
        for (MascotaDTO m : lista) {
            Object[] fila = {
                m.getId(),
                m.getNombre(),
                m.getEspecie(),
                m.getEdad(),
                m.getDocumentoProp()
            };
            modelo.addRow(fila);
    }
    tablaMasc.setModel(modelo); 
}

    private void iniciarCarga() {
    barraCarga.setMinimum(0);
    barraCarga.setMaximum(100);
    barraCarga.setStringPainted(true); // Muestra el porcentaje
    barraCarga.setForeground(Color.GREEN);

    new Thread(() -> {
        for (int i = 0; i <= 100; i++) {
            barraCarga.setValue(i); // Actualiza valor
            try {
                Thread.sleep(50); // Simula la carga
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        JOptionPane.showMessageDialog(this, "Carga completada");
        barraCarga.setVisible(false);
    }).start();
}
    
private void actualizarTablaPropietarios() {
    // Encabezados
    String[] columnas = {"Nombre", "Documento", "Teléfono"};
    DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

    ArrayList<PropietarioDTO> lista = propietarioControlador.obtenerPropietarios();

    if (lista != null && !lista.isEmpty()) {
        for (PropietarioDTO p : lista) {
            Object[] fila = {p.getNombre(), p.getDocumento(), p.getTelefono()};
            modelo.addRow(fila);
        }
    }

    tablaProp.setModel(modelo);
}

private void inicializarComboEspecie() {
    comboEspecie.removeAllItems(); // limpia 

    comboEspecie.addItem("Perro");
    comboEspecie.addItem("Gato");
    comboEspecie.addItem("Conejo");
    
    comboEspecie1.removeAllItems(); // limpia 

    comboEspecie1.addItem("Perro");
    comboEspecie1.addItem("Gato");
    comboEspecie1.addItem("Conejo");
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        separador = new javax.swing.JSeparator();
        tabbedPane = new javax.swing.JTabbedPane();
        panelRegistro = new javax.swing.JPanel();
        lblEdad = new javax.swing.JLabel();
        lblEspecie = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblInfo = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtEdad = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txAMens = new javax.swing.JTextArea();
        bttRegistrarMasc = new javax.swing.JButton();
        lbBlId1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        comboEspecie1 = new javax.swing.JComboBox<>();
        lblDocProp = new javax.swing.JLabel();
        txtDocProp = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lblNomPro1 = new javax.swing.JLabel();
        txtNomProp = new javax.swing.JTextField();
        lblDocumento = new javax.swing.JLabel();
        txtDoc = new javax.swing.JTextField();
        lblTel1 = new javax.swing.JLabel();
        txtTel = new javax.swing.JTextField();
        lblInfo1 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        txAMens1 = new javax.swing.JTextArea();
        bttRegistrarProp = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaProp = new javax.swing.JTable();
        bttBuscarProp = new javax.swing.JButton();
        bttEditarProp = new javax.swing.JButton();
        bttActualizarProp = new javax.swing.JButton();
        bttEliminarProp = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombrePropietario = new javax.swing.JTextField();
        txtDocumentoPropietario = new javax.swing.JTextField();
        txtTelefonoPropietario = new javax.swing.JTextField();
        panelRegistrados = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaMasc = new javax.swing.JTable();
        bttBuscarMascota = new javax.swing.JButton();
        bttEliminarMasc = new javax.swing.JButton();
        bttEditarMas = new javax.swing.JButton();
        bttActualizarMasc = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtIDMascota = new javax.swing.JTextField();
        txtNombreMascota = new javax.swing.JTextField();
        txtDocumentoPropMascota = new javax.swing.JTextField();
        comboEspecie = new javax.swing.JComboBox<>();
        bttBuscarMascota1 = new javax.swing.JButton();
        lblTittle = new javax.swing.JLabel();
        bttMenu = new javax.swing.JButton();
        barraCarga = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrincipal.setBackground(new java.awt.Color(204, 255, 255));

        separador.setBackground(new java.awt.Color(0, 0, 0));
        separador.setForeground(new java.awt.Color(0, 0, 0));

        tabbedPane.setBackground(new java.awt.Color(236, 236, 236));

        lblEdad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEdad.setText("Edad:");

        lblEspecie.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEspecie.setText("Especie:");

        lblNombre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNombre.setText("Nombre:");

        jSeparator1.setBackground(new java.awt.Color(204, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblInfo.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblInfo.setText("Información mascota:");

        txAMens.setColumns(20);
        txAMens.setRows(5);
        txAMens.setText("Tener en cuenta:\n\n* Asegurese de rellenar todos \nlos campos, sino no se podra\nregistrar.\n\n*La informacion debe ser\n correcta para proceder\n con el registro.\n\nGracias por preferirnos.");
        jScrollPane1.setViewportView(txAMens);

        bttRegistrarMasc.setBackground(new java.awt.Color(204, 255, 255));
        bttRegistrarMasc.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        bttRegistrarMasc.setText("Registrar");
        bttRegistrarMasc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttRegistrarMascActionPerformed(evt);
            }
        });

        lbBlId1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbBlId1.setText("Id:");

        comboEspecie1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblDocProp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDocProp.setText("Documento Propietario:");

        javax.swing.GroupLayout panelRegistroLayout = new javax.swing.GroupLayout(panelRegistro);
        panelRegistro.setLayout(panelRegistroLayout);
        panelRegistroLayout.setHorizontalGroup(
            panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegistroLayout.createSequentialGroup()
                .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRegistroLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panelRegistroLayout.createSequentialGroup()
                                .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelRegistroLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEdad))
                                    .addGroup(panelRegistroLayout.createSequentialGroup()
                                        .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelRegistroLayout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(comboEspecie1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(panelRegistroLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(panelRegistroLayout.createSequentialGroup()
                                .addComponent(lbBlId1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelRegistroLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(lblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRegistroLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblDocProp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDocProp, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRegistroLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRegistroLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(bttRegistrarMasc, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(148, Short.MAX_VALUE))
        );
        panelRegistroLayout.setVerticalGroup(
            panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegistroLayout.createSequentialGroup()
                .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelRegistroLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblInfo)
                        .addGap(31, 31, 31)
                        .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbBlId1))
                        .addGap(18, 18, 18)
                        .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombre)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEspecie)
                            .addComponent(comboEspecie1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEdad)
                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDocProp)
                            .addComponent(txtDocProp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addGroup(panelRegistroLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bttRegistrarMasc)
                        .addGap(14, 14, 14))
                    .addGroup(panelRegistroLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1)))
                .addContainerGap())
        );

        tabbedPane.addTab("Registrar mascota", panelRegistro);

        lblNomPro1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNomPro1.setText("Nombre:");

        lblDocumento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDocumento.setText("Documento:");

        lblTel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTel1.setText("Telefono:");

        lblInfo1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblInfo1.setText("Información Propietario:");

        jSeparator4.setBackground(new java.awt.Color(204, 255, 255));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        txAMens1.setColumns(20);
        txAMens1.setRows(5);
        txAMens1.setText("Tener en cuenta:\n\n* Asegurese de rellenar todos \nlos campos, sino no se podra\nregistrar.\n\n*La informacion debe ser\n correcta para proceder\n con el registro.\n\n*Para registrar una mascota, debe estar \n registrado el propietario\n\n\nGracias por preferirnos.");

        bttRegistrarProp.setBackground(new java.awt.Color(204, 255, 255));
        bttRegistrarProp.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        bttRegistrarProp.setText("Registrar");
        bttRegistrarProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttRegistrarPropActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblTel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtTel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblDocumento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDoc))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblNomPro1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtNomProp, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(lblInfo1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(bttRegistrarProp)))
                .addGap(56, 56, 56)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(txAMens1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator4)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(lblInfo1)
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNomPro1)
                            .addComponent(txtNomProp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDocumento)
                            .addComponent(txtDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTel1)
                            .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(bttRegistrarProp))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(txAMens1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Registrar propietario", jPanel1);

        tablaProp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tablaProp);

        bttBuscarProp.setText("Buscar");
        bttBuscarProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttBuscarPropActionPerformed(evt);
            }
        });

        bttEditarProp.setText("Editar");
        bttEditarProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttEditarPropActionPerformed(evt);
            }
        });

        bttActualizarProp.setText("Actualizar");
        bttActualizarProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttActualizarPropActionPerformed(evt);
            }
        });

        bttEliminarProp.setText("Eliminar");
        bttEliminarProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttEliminarPropActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre: ");

        jLabel3.setText("Documento:");

        jLabel5.setText("Telefono:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombrePropietario, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                            .addComponent(txtDocumentoPropietario)
                            .addComponent(txtTelefonoPropietario))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(bttBuscarProp)
                        .addGap(44, 44, 44)
                        .addComponent(bttEliminarProp)
                        .addGap(28, 28, 28)
                        .addComponent(bttEditarProp)
                        .addGap(32, 32, 32)
                        .addComponent(bttActualizarProp)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombrePropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDocumentoPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtTelefonoPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttEliminarProp)
                    .addComponent(bttBuscarProp)
                    .addComponent(bttEditarProp)
                    .addComponent(bttActualizarProp))
                .addContainerGap())
        );

        tabbedPane.addTab("Propietarios Registrados", jPanel2);

        tablaMasc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "title 1", "title 2", "title 3", "title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaMasc);

        bttBuscarMascota.setText("Buscar por ID");
        bttBuscarMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttBuscarMascotaActionPerformed(evt);
            }
        });

        bttEliminarMasc.setText("Eliminar");
        bttEliminarMasc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttEliminarMascActionPerformed(evt);
            }
        });

        bttEditarMas.setText("Editar");
        bttEditarMas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttEditarMasActionPerformed(evt);
            }
        });

        bttActualizarMasc.setText("Actualizar");
        bttActualizarMasc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttActualizarMascActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre:");

        jLabel6.setText("Especie:");

        jLabel7.setText("Documento propietario");

        jLabel8.setText("ID:");

        comboEspecie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        bttBuscarMascota1.setText("Buscar por documento");
        bttBuscarMascota1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttBuscarMascota1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRegistradosLayout = new javax.swing.GroupLayout(panelRegistrados);
        panelRegistrados.setLayout(panelRegistradosLayout);
        panelRegistradosLayout.setHorizontalGroup(
            panelRegistradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegistradosLayout.createSequentialGroup()
                .addGroup(panelRegistradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRegistradosLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(panelRegistradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelRegistradosLayout.createSequentialGroup()
                                .addGroup(panelRegistradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(40, 40, 40)
                                .addGroup(panelRegistradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIDMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombreMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelRegistradosLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDocumentoPropMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRegistradosLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(bttBuscarMascota)
                        .addGap(38, 38, 38)
                        .addComponent(bttBuscarMascota1)
                        .addGap(34, 34, 34)
                        .addComponent(bttEliminarMasc)
                        .addGap(46, 46, 46)
                        .addComponent(bttEditarMas)
                        .addGap(29, 29, 29)
                        .addComponent(bttActualizarMasc)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelRegistradosLayout.setVerticalGroup(
            panelRegistradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegistradosLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelRegistradosLayout.createSequentialGroup()
                .addGroup(panelRegistradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelRegistradosLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(panelRegistradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtIDMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelRegistradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNombreMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(panelRegistradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(comboEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(panelRegistradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtDocumentoPropMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(panelRegistradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttBuscarMascota)
                    .addComponent(bttBuscarMascota1)
                    .addComponent(bttEliminarMasc)
                    .addComponent(bttEditarMas)
                    .addComponent(bttActualizarMasc))
                .addContainerGap())
        );

        tabbedPane.addTab("Mascotas registradas", panelRegistrados);

        lblTittle.setFont(new java.awt.Font("Dialog", 3, 36)); // NOI18N
        lblTittle.setText("Registro Clinica");

        bttMenu.setBackground(new java.awt.Color(225, 225, 225));
        bttMenu.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        bttMenu.setText("Menú");
        bttMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(lblTittle)
                .addGap(47, 47, 47)
                .addComponent(bttMenu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(barraCarga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(separador, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTittle)
                    .addComponent(bttMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(separador, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barraCarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttMenuActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_bttMenuActionPerformed

    private void bttBuscarMascota1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttBuscarMascota1ActionPerformed
        // TODO add your handling code here:
        String documento = JOptionPane.showInputDialog(this, "Ingrese el documento del propietario:");
        if (documento == null || documento.equals("")) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un documento válido.");
            return;
        }
        ArrayList<MascotaDTO> resultado = mascotaControlador.buscarPorDocumentoPropietario(documento);

        if (resultado.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No se encontraron mascotas para este documento.");
        } else {
            DefaultTableModel modelo = (DefaultTableModel) tablaMasc.getModel();
            modelo.setRowCount(0); // Limpiar la tabla
            for (MascotaDTO m : resultado) {
                modelo.addRow(new Object[]{
                    m.getId(),
                    m.getNombre(),
                    m.getEspecie(),
                    m.getEdad(),
                    m.getDocumentoProp()
                });
            }
        }
    }//GEN-LAST:event_bttBuscarMascota1ActionPerformed

    private void bttActualizarMascActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttActualizarMascActionPerformed
        // TODO add your handling code here:
        actualizarTablaMascotas();
    }//GEN-LAST:event_bttActualizarMascActionPerformed

    private void bttEditarMasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttEditarMasActionPerformed
        // TODO add your handling code here:
        int fila = tablaMasc.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una mascota para editar.");
            return;
        }

        String id = (String) tablaMasc.getValueAt(fila, 0);
        String nuevoNombre = JOptionPane.showInputDialog(this, "Nuevo nombre:");
        String nuevaEspecie = JOptionPane.showInputDialog(this, "Nueva especie:");
        String edadTexto = JOptionPane.showInputDialog(this, "Nueva edad:");
        if (nuevoNombre != null && nuevaEspecie != null && edadTexto != null &&
            !nuevoNombre.equals("") && !nuevaEspecie.equals("") && !edadTexto.equals("")) {
            int nuevaEdad = Integer.parseInt(edadTexto);
            MascotaDTO nueva = new MascotaDTO(id, nuevoNombre, nuevaEspecie, nuevaEdad);
            boolean editado = mascotaControlador.editarMascota(id, nuevoNombre, nuevaEspecie, nuevaEdad);
            if (editado) {
                JOptionPane.showMessageDialog(this, "Mascota actualizada.");
                actualizarTablaMascotas();
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo actualizar.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Todos los campos deben estar llenos.");
        }
    }//GEN-LAST:event_bttEditarMasActionPerformed

    private void bttEliminarMascActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttEliminarMascActionPerformed
        // TODO add your handling code here:
        int fila = tablaMasc.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una mascota para eliminar.");
            return;
        }
        String id = (String) tablaMasc.getValueAt(fila, 0);
        MascotaDTO mascota = mascotaControlador.buscarMascota(id);
        if (mascota != null && mascotaControlador.eliminarMascota(id)) {
            JOptionPane.showMessageDialog(this, "Mascota eliminada correctamente.");
            actualizarTablaMascotas();
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo eliminar la mascota.");
        }
    }//GEN-LAST:event_bttEliminarMascActionPerformed

    private void bttBuscarMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttBuscarMascotaActionPerformed
        // TODO add your handling code here:
        String id = txtIDMascota.getText();
        if (id.isBlank()) {
            JOptionPane.showMessageDialog(this, "Ingrese el ID de la mascota.");
            return;
        }
        MascotaDTO m = mascotaControlador.buscarMascota(id);
        if (m != null) {
            JOptionPane.showMessageDialog(this, "Mascota encontrada:\nNombre: " + m.getNombre()
                + "\nEspecie: " + m.getEspecie() + "\nEdad: " + m.getEdad());
        } else {
            JOptionPane.showMessageDialog(this, "Mascota no encontrada.");
        }
    }//GEN-LAST:event_bttBuscarMascotaActionPerformed

    private void bttEliminarPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttEliminarPropActionPerformed
        // TODO add your handling code here:
        String documento = txtDocumentoPropietario.getText();
        if (!documento.isBlank()) {
            boolean exito = propietarioControlador.eliminarPropietario(documento);
            if (exito) {
                JOptionPane.showMessageDialog(this, "Propietario eliminado.");
                actualizarTablaPropietarios();
                limpiarCampos(); // método opcional
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró el propietario.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese el documento a eliminar.");
        }
    }//GEN-LAST:event_bttEliminarPropActionPerformed

    private void bttActualizarPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttActualizarPropActionPerformed
        // TODO add your handling code here:
        actualizarTablaPropietarios();
    }//GEN-LAST:event_bttActualizarPropActionPerformed

    private void bttEditarPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttEditarPropActionPerformed
        // TODO add your handling code here:
        String documento = txtDocumentoPropietario.getText();
        String nuevoNombre = txtNombrePropietario.getText();
        String nuevoTelefono = txtTelefonoPropietario.getText();
        if (!documento.isBlank() && !nuevoNombre.isBlank() && !nuevoTelefono.isBlank()) {
            boolean exito = propietarioControlador.editarPropietario(documento, nuevoNombre, nuevoTelefono);
            if (exito) {
                JOptionPane.showMessageDialog(this, "Datos del propietario actualizados.");
                actualizarTablaPropietarios();
            } else {
                JOptionPane.showMessageDialog(this, "Propietario no encontrado para editar.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Todos los campos son requeridos.");
        }
    }//GEN-LAST:event_bttEditarPropActionPerformed

    private void bttBuscarPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttBuscarPropActionPerformed
        // TODO add your handling code here:
        String documento = txtDocumentoPropietario.getText();
        if (!documento.isBlank()) {
            PropietarioDTO p = propietarioControlador.buscarPropietario(documento);
            if (p != null) {
                txtNombrePropietario.setText(p.getNombre());
                txtTelefonoPropietario.setText(p.getTelefono());
            } else {
                JOptionPane.showMessageDialog(this, "Propietario no encontrado.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese el documento para buscar.");
        }
    }//GEN-LAST:event_bttBuscarPropActionPerformed

    private void bttRegistrarPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttRegistrarPropActionPerformed
        // TODO add your handling code here:
        String nombre = txtNomProp.getText().trim();
        String documento = txtDoc.getText().trim();
        String telefono = txtTel.getText().trim();
        if (nombre.isEmpty() || documento.isEmpty() || telefono.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        PropietarioDTO propietario = new PropietarioDTO(nombre, documento, telefono);
        propietario.setNombre(nombre);
        propietario.setDocumento(documento);
        propietario.setTelefono(telefono);
        boolean registrado = propietarioControlador.registrarPropietario(nombre, documento, telefono);
        if (registrado) {
            JOptionPane.showMessageDialog(this, "Propietario registrado exitosamente");
            limpiarCampos();
            actualizarTablaPropietarios();
        } else {
            JOptionPane.showMessageDialog(this, "Ya existe un propietario con ese documento", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bttRegistrarPropActionPerformed

    private void bttRegistrarMascActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttRegistrarMascActionPerformed
        // TODO add your handling code here:
        String id = txtId.getText().trim();
        String nombre = txtNombre.getText().trim();
        String especie = (String) comboEspecie.getSelectedItem();
        String edadTexto = txtEdad.getText().trim();
        String documentoProp = txtDocProp.getText().trim();
        if (id.isBlank() || nombre.isBlank() || especie.isBlank() || edadTexto.isBlank() || documentoProp.isBlank()) {
            JOptionPane.showMessageDialog(this, "Todos los campos deben estar llenos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int edad;
        try {
            edad = Integer.parseInt(edadTexto);
            if (edad < 0) {
                JOptionPane.showMessageDialog(this, "La edad no puede ser negativa.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "La edad debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Validar existencia del propietario
        PropietarioDTO propietarioEncontrado = propietarioControlador.buscarPropietario(documentoProp);
        if (propietarioEncontrado == null) {
            JOptionPane.showMessageDialog(this, "No existe un propietario con ese documento.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Crear mascota y asociar documento del propietario
        MascotaDTO nueva = new MascotaDTO(id, nombre, especie, edad);
        nueva.setDocumentoProp(documentoProp);

        boolean exito = mascotaControlador.registrarMascota(id, nombre, especie, edad, documentoProp);

        if (exito) {
            JOptionPane.showMessageDialog(this, "Mascota registrada exitosamente.");
            actualizarTablaMascotas(); // Método que vuelve a llenar la tabla
            limpiarCampos(); // Método opcional para limpiar los campos
        } else {
            JOptionPane.showMessageDialog(this, "Ya existe una mascota con ese ID.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_bttRegistrarMascActionPerformed

    private void limpiarCampos(){
        txtDoc.setText(null);
        txtNomProp.setText(null);
        txtTel.setText(null);
        txtId.setText(null);
        txtNombre.setText(null);
        txtEdad.setText(null);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaRegistro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barraCarga;
    private javax.swing.JButton bttActualizarMasc;
    private javax.swing.JButton bttActualizarProp;
    private javax.swing.JButton bttBuscarMascota;
    private javax.swing.JButton bttBuscarMascota1;
    private javax.swing.JButton bttBuscarProp;
    private javax.swing.JButton bttEditarMas;
    private javax.swing.JButton bttEditarProp;
    private javax.swing.JButton bttEliminarMasc;
    private javax.swing.JButton bttEliminarProp;
    private javax.swing.JButton bttMenu;
    private javax.swing.JButton bttRegistrarMasc;
    private javax.swing.JButton bttRegistrarProp;
    private javax.swing.JComboBox<String> comboEspecie;
    private javax.swing.JComboBox<String> comboEspecie1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lbBlId1;
    private javax.swing.JLabel lblDocProp;
    private javax.swing.JLabel lblDocumento;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblEspecie;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JLabel lblInfo1;
    private javax.swing.JLabel lblNomPro1;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTel1;
    private javax.swing.JLabel lblTittle;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelRegistrados;
    private javax.swing.JPanel panelRegistro;
    private javax.swing.JSeparator separador;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable tablaMasc;
    private javax.swing.JTable tablaProp;
    private javax.swing.JTextArea txAMens;
    private javax.swing.JTextArea txAMens1;
    private javax.swing.JTextField txtDoc;
    private javax.swing.JTextField txtDocProp;
    private javax.swing.JTextField txtDocumentoPropMascota;
    private javax.swing.JTextField txtDocumentoPropietario;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtIDMascota;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNomProp;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreMascota;
    private javax.swing.JTextField txtNombrePropietario;
    private javax.swing.JTextField txtTel;
    private javax.swing.JTextField txtTelefonoPropietario;
    // End of variables declaration//GEN-END:variables
}
